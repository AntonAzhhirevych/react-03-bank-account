{"version":3,"sources":["components/TransactionHistory/TransactionHistory.module.css","components/Balance/Balance.module.css","components/Balance/Balance.js","components/toast.js","components/Controls/Controls.js","components/TransactionHistory/TransactionHistory.js","components/Dashboard/Dashboard.js","components/App.js","index.js","components/Controls/Controls.module.css"],"names":["module","exports","table","withdrawal","deposit","td","th","balance","balance_spn","Balance","_ref","current","react_default","a","createElement","className","styles","toast","configure","autoClose","draggable","notifyA","error","notifyB","notifyC","success","Controls","state","value","changeInput","target","_this","setState","reset","handleSubmit","_ref2","name","_this$props","props","onState","onControls","Number","closest","children","type","amount","this","controls","controls_inp","onChange","controls_btn","onClick","Component","TransactionHistory","items","tr","map","id","date","key","Dashboard","transactions","componentDidMount","getTransactions","localStorage","getItem","parseTransactions","JSON","parse","componentDidUpdate","prevProps","prevState","setItem","stringify","addDepositAmmount","handleControls","newArr","concat","Object","toConsumableArray","objectSpread","shortid","Date","toLocaleString","Fragment","components_Controls_Controls","components_Balance_Balance","components_TransactionHistory_TransactionHistory","App","components_Dashboard_Dashboard","ReactDOM","render","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.95381ee4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"TransactionHistory_table__RGe1M\",\"withdrawal\":\"TransactionHistory_withdrawal__1L8EQ\",\"deposit\":\"TransactionHistory_deposit__2c2Ss\",\"td\":\"TransactionHistory_td__2S-EZ\",\"th\":\"TransactionHistory_th__2SN55\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"balance\":\"Balance_balance__GwYt-\",\"balance_spn\":\"Balance_balance_spn__2IL4y\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Balance.module.css';\n\nconst Balance = ({ current, deposit, withdrawal }) => {\n  return (\n    <section className={styles.balance}>\n      <span className={styles.balance_spn}>⬆{deposit}$</span>\n      <span className={styles.balance_spn}>⬇{withdrawal}$</span>\n      <span className={styles.balance_spn}>Balance: {current}$</span>\n    </section>\n  );\n};\n\nBalance.propTypes = {\n  current: PropTypes.number.isRequired,\n  deposit: PropTypes.number.isRequired,\n  withdrawal: PropTypes.number.isRequired,\n};\n\nexport default Balance;\n","import 'react-toastify/dist/ReactToastify.css';\nimport { toast } from 'react-toastify';\n\ntoast.configure({\n  autoClose: 1500,\n  draggable: true,\n});\n\nconst notifyA = () => toast.error('Введите сумму для проведения операции!', {});\n\nconst notifyB = () =>\n  toast.error('На счету недостаточно средств для проведения операции!', {});\n\nconst notifyC = () => toast.success('Операция успешна!', {});\n\nexport { notifyA, notifyB, notifyC };\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { notifyA, notifyB, notifyC } from '../toast';\nimport styles from './Controls.module.css';\n\nclass Controls extends Component {\n  state = {\n    value: '',\n  };\n\n  changeInput = ({ target }) => {\n    this.setState({ value: target.value });\n  };\n\n  reset = () => {\n    this.setState({ value: '' });\n  };\n\n  handleSubmit = ({ target }) => {\n    const { name } = target;\n    const { onState, onControls } = this.props;\n\n    const value = Number(target.closest('section').children[0].value);\n\n    if (value === 0) {\n      notifyA();\n    } else if (name === 'Withdrawal' && value > onState) {\n      notifyB();\n    } else {\n      onControls({\n        type: name,\n        amount: target.closest('section').children[0].value,\n      });\n\n      this.reset();\n\n      notifyC();\n    }\n  };\n\n  // reset = el => {\n  //   return (el.value = '');\n  // };\n\n  render() {\n    const { value } = this.state;\n    return (\n      <section className={styles.controls}>\n        <input\n          className={styles.controls_inp}\n          type=\"number\"\n          onChange={this.changeInput}\n          value={value}\n        />\n        <button\n          className={styles.controls_btn}\n          name=\"Deposit\"\n          onClick={this.handleSubmit}\n          type=\"button\"\n        >\n          Deposit\n        </button>\n        <button\n          className={styles.controls_btn}\n          name=\"Withdrawal\"\n          onClick={this.handleSubmit}\n          type=\"button\"\n        >\n          Withdraw\n        </button>\n      </section>\n    );\n  }\n}\nControls.propTypes = {\n  onState: PropTypes.number.isRequired,\n  onControls: PropTypes.func.isRequired,\n};\n\nexport default Controls;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './TransactionHistory.module.css';\n\nconst TransactionHistory = ({ items }) => {\n  return (\n    <table className={styles.table}>\n      <thead>\n        <tr className={styles.tr}>\n          <th className={styles.th}>Transaction</th>\n          <th className={styles.th}>Amount</th>\n          <th className={styles.th}>Date</th>\n        </tr>\n      </thead>\n      <tbody>\n        {items.map(({ id, type, amount, date }) => (\n          <tr\n            className={\n              type === 'Withdrawal' ? styles.withdrawal : styles.deposit\n            }\n            key={id}\n          >\n            <td className={styles.td}>{type}</td>\n            <td className={styles.td}>{amount}.00$</td>\n            <td className={styles.td}>{date}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nTransactionHistory.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      amount: PropTypes.string.isRequired,\n      date: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n\nexport default TransactionHistory;\n","import React, { Component } from 'react';\nimport shortid from 'shortid';\nimport Balance from '../Balance/Balance';\nimport Controls from '../Controls/Controls';\nimport TransactionHistory from '../TransactionHistory/TransactionHistory';\n\nclass Dashboard extends Component {\n  state = {\n    transactions: [],\n    balance: {\n      current: 0,\n      deposit: 0,\n      withdrawal: 0,\n    },\n  };\n\n  componentDidMount = () => {\n    const getTransactions = localStorage.getItem('transaction');\n\n    if (getTransactions) {\n      const parseTransactions = JSON.parse(getTransactions);\n      this.setState(parseTransactions);\n    }\n  };\n\n  componentDidUpdate = (prevProps, prevState) => {\n    if (prevState !== this.state) {\n      localStorage.setItem('transaction', JSON.stringify(this.state));\n    }\n  };\n\n  addDepositAmmount = balance => {\n    if (balance.type === 'Deposit') {\n      this.setState(state => ({\n        balance: {\n          current: state.balance.current + Number(balance.amount),\n          deposit: state.balance.deposit + Number(balance.amount),\n          withdrawal: state.balance.withdrawal,\n        },\n      }));\n    } else {\n      this.setState(state => ({\n        balance: {\n          current: state.balance.current - Number(balance.amount),\n          deposit: state.balance.deposit,\n          withdrawal: state.balance.withdrawal + Number(balance.amount),\n        },\n      }));\n    }\n  };\n\n  handleControls = balance => {\n    const { transactions } = this.state;\n\n    // BALANCE\n    this.addDepositAmmount(balance);\n\n    // TRANSACTIONS\n    const newArr = [\n      ...transactions,\n      {\n        ...balance,\n        id: shortid(),\n        date: `${new Date().toLocaleString()}`,\n      },\n    ];\n\n    this.setState({ transactions: newArr });\n  };\n\n  render() {\n    const { transactions } = this.state;\n    const { balance } = this.state;\n    return (\n      <>\n        <Controls onState={balance.current} onControls={this.handleControls} />\n        <Balance\n          withdrawal={balance.withdrawal}\n          deposit={balance.deposit}\n          current={balance.current}\n        />\n        <TransactionHistory items={transactions} />\n      </>\n    );\n  }\n}\n\nexport default Dashboard;\n","import React from 'react';\nimport Dashboard from './Dashboard/Dashboard';\n\nconst App = () => {\n  return <Dashboard />;\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"controls\":\"Controls_controls__3vFh6\",\"controls_inp\":\"Controls_controls_inp__11mcx\",\"controls_btn\":\"Controls_controls_btn__aqafE\"};"],"sourceRoot":""}